#!/bin/bash

# This is a script to mimic sendmail(1) interface, but
# relay email by sendEmail(1).

. /usr/lib/tool/bash-utils || exit -1

declare -a recipient
from_header=''
envelope_sender=''
get_recipients_from_headers=no
single_dot_terminates_input=yes

while [ -n "$1" ]
do
	case "$1" in
	-F)	shift
		from_header=$1;;  # TODO FIXME
	-f|-r)
		shift
		envelope_sender=$1;;
	-t)	get_recipients_from_headers=yes;;
	-ti)
		get_recipients_from_headers=yes
		single_dot_terminates_input=no
		;;
	-i|-oi)
		single_dot_terminates_input=no;;
	-o)
		shift
		warnx "Ignoring option: -o $1";;
	-bp|-bs)
		errx 22 "Option not supported: $1";;
	-*)	errx 22 "Unknown option: $1";;
	*)	recipient+=("$1");;
	esac
	shift
done

if [ $get_recipients_from_headers = yes -a ${#recipient[@]} != 0 ]
then
	errx 22 "Option -t and specifying recipients are mutually exclusive."
fi


maildomain=`cat /etc/maildomain 2>/dev/null || domainname`
if [ "$maildomain" = '(none)' ]; then maildomain=''; fi
if [ -n "$maildomain" ]; then maildomain=localhost; fi

qualify_address()
{
	# add local domain name if there is no domain part in the address
	local addr=$1
	if ! [[ $addr =~ @ ]]
	then
		addr=$addr@$maildomain
	fi
	echo "$addr"
}

if [ -z "$envelope_sender" ]
then
	envelope_sender=$USER@$maildomain
else
	envelope_sender=`qualify_address "$envelope_sender"`
fi

for idx in ${!recipient[@]}
do
	recipient[$idx]=`qualify_address "${recipient[$idx]}"`
done

raw_email=`cat`

if [ $get_recipients_from_headers = yes ]
then
	recipient+=(`mail-extract-raw-headers -n To Cc Bcc <<< "$raw_email" | mime-header-decode | mail-extract-addresses | sort -u`)
fi

recipient_args=()
for recipient in "${recipients[@]}"
do
	recipient_args+=(-t "$recipient")
done

sendEmail -f "$envelope_sender" "${recipient_args[@]}" -o message-format=raw -o message-file=- -s "${SMTP_SERVER:-localhost:25}" <<< "$raw_email" 1>&2
