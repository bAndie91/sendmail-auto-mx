#!/bin/bash

# This is a script to mimic sendmail(1) interface, but
# relay email by sendEmail(1).

. /usr/lib/tool/bash-utils || exit -1

envelope_sender=''
trust_fromaddr=no
declare -a recipients
get_recipients_from_headers=no
single_dot_terminates_input=yes

while [ -n "$1" ]
do
	case "$1" in
	(--trust-fromaddr)
		trust_fromaddr=yes;;
	(-f|-r)
		shift
		envelope_sender=$1;;
	(-t)
		get_recipients_from_headers=yes;;
	(-ti)
		get_recipients_from_headers=yes
		single_dot_terminates_input=no
		;;
	(-i|-oi)
		single_dot_terminates_input=no;;
	(-o|-F)
		warnx "Ignoring option: $1 $2"
		shift;;
	(-bp|-bs)
		errx 22 "Option not supported: $1";;
	(--help)
		echo "Raw email is read on stdin"
		echo "Options:"
		echo "  -f, -r MAIL_FROM   set envelope sender"
		echo "  --trust-fromaddr   take MAIL_FROM from input email From header"
		echo "  -t                 take recipients from input email To, Cc, and Bcc headers"
		echo "  -i, -oi            lone dot does not terminate the input email"
		echo "  -ti                usual usage, equal to -t -i"
		exit 0;;
	(-*)
		errx 22 "Unknown option: $1";;
	(*)
		recipients+=("$1");;
	esac
	shift
done

if [ $trust_fromaddr = yes -a -n "$envelope_sender" ]
then
	errx 22 "Option -f/-r and --trust-fromaddr are mutually exclusive."
fi

if [ $get_recipients_from_headers = yes -a ${#recipients[@]} != 0 ]
then
	errx 22 "Option -t and specifying recipients are mutually exclusive."
fi


maildomain=`cat /etc/maildomain 2>/dev/null || domainname`
if [ "$maildomain" = '(none)' ]; then maildomain=''; fi
if [ -z "$maildomain" ]; then maildomain=localhost; fi

qualify_address()
{
	# add local domain name if there is no domain part in the address
	local addr=$1
	if ! [[ $addr =~ @ ]]
	then
		addr=$addr@$maildomain
	fi
	echo "$addr"
}

if [ -z "$envelope_sender" -a $trust_fromaddr = no ]
then
	envelope_sender=$USER@$maildomain
fi

for idx in ${!recipients[@]}
do
	recipients[$idx]=`qualify_address "${recipients[$idx]}"`
done

headers_buffer=''

if [ $get_recipients_from_headers = yes -o $trust_fromaddr = yes ]
then
	while read -r header_line
	do
		headers_buffer=$headers_buffer$header_line$'\n'
		if [ "$header_line" = $'\r' -o -z "$header_line" ]; then break; fi  # end-of-headers
	done
	if [ $get_recipients_from_headers = yes ]
	then
		recipients+=(`mail-extract-raw-headers -n To Cc Bcc <<< "$headers_buffer" | mime-header-decode | mail-extract-addresses | sort -u`)
	fi
	if [ $trust_fromaddr = yes ]
	then
		envelope_sender=`mail-extract-raw-headers -n From <<< "$headers_buffer" | mime-header-decode | mail-extract-addresses`
	fi
fi


envelope_sender=`qualify_address "$envelope_sender"`

recipient_args=()
for recipient in "${recipients[@]}"
do
	recipient_args+=(-t "$recipient")
done

{
	echo -n "$headers_buffer"
	cat  # pipe the rest/all of the email
} |\
sendEmail -v -f "$envelope_sender" "${recipient_args[@]}" -o message-format=raw -o message-file=/dev/stdin -o tls=auto $SENDEMAIL_OPTS -s "${SMTP_SERVER:-localhost:25}" 1>&2
